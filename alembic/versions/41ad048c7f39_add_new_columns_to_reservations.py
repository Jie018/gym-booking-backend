"""add new columns to reservations

Revision ID: 41ad048c7f39
Revises: 
Create Date: 2025-08-04 11:20:35.449132

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '41ad048c7f39'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('booking_students')
    # op.drop_table('bookings')
    # op.drop_table('booking_slots')
    op.alter_column('available_slots', 'start_time',
               existing_type=mysql.TIME(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('available_slots', 'end_time',
               existing_type=mysql.TIME(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.add_column('reservations', sa.Column('contact_phone', sa.String(length=20), nullable=True))
    op.add_column('reservations', sa.Column('people_count', sa.Integer(), nullable=True))
    op.add_column('reservations', sa.Column('student_ids', sa.String(length=255), nullable=True))
    
    # 補值避免舊資料報錯
    op.execute("UPDATE reservations SET contact_phone = '' WHERE contact_phone IS NULL")
    op.execute("UPDATE reservations SET people_count = 0 WHERE people_count IS NULL")
    op.execute("UPDATE reservations SET student_ids = '' WHERE student_ids IS NULL")

    # 再改成 NOT NULL
    op.alter_column('reservations', 'contact_phone', nullable=False)
    op.alter_column('reservations', 'people_count', nullable=False)
    op.alter_column('reservations', 'student_ids', nullable=False)

    op.alter_column('reservations', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('reservations', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.execute("UPDATE users SET email = '' WHERE email IS NULL")
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False,
               comment=None,
               existing_comment='使用者信箱')
    op.create_unique_constraint(None, 'users', ['email'])
    # 從 booking_slots 複製時段到 available_slots（這裡要根據實際欄位對應調整）
    op.execute("""
    INSERT INTO available_slots (start_time, end_time, venue_id)
    SELECT STR_TO_DATE(time_slot, '%H:%i'), DATE_ADD(STR_TO_DATE(time_slot, '%H:%i'), INTERVAL 1 HOUR), b.venue_id
    FROM booking_slots bs
    JOIN bookings b ON bs.booking_id = b.id
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True,
               comment='使用者信箱')
    op.alter_column('reservations', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('reservations', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_column('reservations', 'student_ids')
    op.drop_column('reservations', 'people_count')
    op.drop_column('reservations', 'contact_phone')
    op.alter_column('available_slots', 'end_time',
               existing_type=sa.DateTime(),
               type_=mysql.TIME(),
               existing_nullable=False)
    op.alter_column('available_slots', 'start_time',
               existing_type=sa.DateTime(),
               type_=mysql.TIME(),
               existing_nullable=False)
    op.create_table('booking_slots',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('booking_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('time_slot', mysql.VARCHAR(length=8), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('booking_slots_ibfk_1'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('bookings',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('venue_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('people_count', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('contact_phone', mysql.VARCHAR(length=20), nullable=False),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('booking_students',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('booking_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', mysql.VARCHAR(length=20), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name=op.f('booking_students_ibfk_1'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
